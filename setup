#!/bin/bash

if [ -f "$__scriptDir/setup-lib" ]
then
  source "$__scriptDir/setup-lib"
else
  echo "$__scriptDir/setup-lib not found!"
  exit 1
fi

# Process the arguments
for arg in "$@"
do
  case $arg in
  -h|--help)
    usage
    ;;
  *)
    exit_with_error "Argument $arg not recognized"
    ;;
  esac
done

# Find the script directory
__scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
__configDir="$__scriptDir/configs"
__bashDir="$__scriptDir/bash"
__scriptsDir="$__scriptDir/scripts"

echo "Setting up contents of $__scriptDir"

# Remove and install appropriate packages
echo -e "\nApt installations"
( set -x && sudo apt update && sudo apt upgrade )
__removePackages=`cat $__configDir/apt-remove`
__installPackages=`cat $__configDir/apt-install`
( set -x && sudo apt remove $__removePackages )
( set -x && sudo apt install $__installPackages )

# Setup .bash_history_cleaner.py (removes current copy)
echo -e "\nBash history cleaner script setup"
verify_file_link ~/.bash_history.json $__bashDir/bash_history.json false
verify_file_link ~/.bash_history_cleaner.py $__bashDir/bash_history_cleaner.py false

# Setup .bash_aliases to source the bash_aliases in the script directory
echo -e "\nBash aliases setup"
append_if_absent ~/.bash_aliases "if [ -f $__bashDir/bash_aliases ]; then source $__bashDir/bash_aliases; fi"

# Setup .bash_aliases to source the bash_ps1 in the script directory
echo -e "\nBash ps1 setup"
append_if_absent ~/.bash_aliases "if [ -f $__bashDir/bash_ps1 ]; then source $__bashDir/bash_ps1; fi"

# Setup sakura configuration
echo -e "\nSakura config setup"
verify_file_link ~/.config/sakura/sakura.conf $__configDir/sakura-config false

# Setup i3 configuration
echo -e "\ni3 config setup"
verify_file_link ~/.config/i3/config $__configDir/i3-config false
verify_file_link ~/.config/i3status/config $__configDir/i3status-config false
